/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.pagamento;

import dao.PagamentoDAO;
import dao.TurmaDAO;
import form.DlgConsultarTurma;
import form.DlgMenuConsultas;
import form.DlgRealizarMatricula;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Pagamento;
import model.Turma;
import table.ConsultaPagamentoTableModel;

/**
 *
 * @author Ana Paula
 */
public class DlgConsultarPagamento extends javax.swing.JFrame {

    List<Pagamento> pagamentosEncontrados = new ArrayList<>();
    ConsultaPagamentoTableModel pagamentoTable = new ConsultaPagamentoTableModel();
    Pagamento pagamento = new Pagamento();
    private int nivelUsuario;

    /**
     * Creates new form DlgConsultarPagamento
     */
    public DlgConsultarPagamento() {
        initComponents();
        iniciarTabela();
        iniciarComboTurmas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbPagamentos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbTurmas = new javax.swing.JComboBox();
        cbMeses = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btEnviar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tbPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Turma", "Valor Pago", "Mês", "Usuário", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPagamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPagamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPagamentos);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Pesquisar:");

        cbTurmas.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbTurmas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas as Turmas" }));
        cbTurmas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTurmasActionPerformed(evt);
            }
        });

        cbMeses.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbMeses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos os Meses", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cbMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Mês:");

        btEnviar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Enviar.png"))); // NOI18N
        btEnviar.setText("Enviar");
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        btCancelar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Cancelar.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTurmas, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbTurmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btEnviar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbPagamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPagamentosMouseClicked
        if (evt.getClickCount() == 2) {
            enviarDados();
        }
    }//GEN-LAST:event_tbPagamentosMouseClicked

    private void cbTurmasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTurmasActionPerformed
        try {
            pesquisarPagamentos();
        } catch (SQLException ex) {
            Logger.getLogger(DlgConsultarPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbTurmasActionPerformed

    private void cbMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesesActionPerformed
        try {
            pesquisarPagamentos();
        } catch (SQLException ex) {
            Logger.getLogger(DlgConsultarPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbMesesActionPerformed

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        enviarDados();
    }//GEN-LAST:event_btEnviarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
        if (nivelUsuario == 3) {
            DlgMenuConsultas menuConsultas = new DlgMenuConsultas(this, rootPaneCheckingEnabled);
            menuConsultas.verificarNivel(nivelUsuario);
            menuConsultas.setVisible(true);
        }
    }//GEN-LAST:event_btCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgConsultarPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgConsultarPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgConsultarPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgConsultarPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DlgConsultarPagamento().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEnviar;
    private javax.swing.JComboBox cbMeses;
    private javax.swing.JComboBox cbTurmas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPagamentos;
    // End of variables declaration//GEN-END:variables

    private void iniciarTabela() {
        try {
            pagamentosEncontrados = new PagamentoDAO().listarTodos();
            atualizarTabela();
        } catch (SQLException ex) {
            Logger.getLogger(DlgConsultarTurma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void atualizarTabela() {
        pagamentoTable = new ConsultaPagamentoTableModel((ArrayList<Pagamento>) pagamentosEncontrados);
        tbPagamentos.setModel(pagamentoTable);
    }

    private void iniciarComboTurmas() {
        List<Turma> listaTurma = new ArrayList();
        try {
            listaTurma = new TurmaDAO().listarTodos();
            for (Turma turma : listaTurma) {
                cbTurmas.addItem(turma);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DlgRealizarMatricula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void pesquisarPagamentos() throws SQLException {
        String turma = cbTurmas.getSelectedItem().toString();
        String mes = cbMeses.getSelectedItem().toString();
        if (cbTurmas.getSelectedIndex() == 0 && cbMeses.getSelectedIndex() == 0) {
            pagamentosEncontrados = new PagamentoDAO().listarTodos();

        } else if (cbTurmas.getSelectedIndex() == 0 && cbMeses.getSelectedIndex() != 0) {
            pagamentosEncontrados = new PagamentoDAO().listarTodosPorMes(mes);

        } else if (cbTurmas.getSelectedIndex() != 0 && cbMeses.getSelectedIndex() == 0) {
            List<Turma> turmas = new TurmaDAO().buscarPorNome(turma);
            pagamentosEncontrados = new PagamentoDAO().listarTodosPorTurma(turmas.get(0));

        } else {
            List<Turma> turmas = new TurmaDAO().buscarPorNome(turma);
            pagamentosEncontrados = new PagamentoDAO().listarTodosPorTurmaEMes(turmas.get(0),
                    mes);
        }
        atualizarTabela();
    }

    private void enviarDados() {
        DlgEfetuarPagamentoBeneficio dlgEfetuarPagamento = new DlgEfetuarPagamentoBeneficio(this, rootPaneCheckingEnabled, true);
        pagamento = pagamentoTable.getPagamento(tbPagamentos.getSelectedRow());
        try {
            pagamento.setBeneficios(new PagamentoDAO().buscarBeneficios(pagamento.getId()));
        } catch (SQLException ex) {
            Logger.getLogger(DlgConsultarPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        dlgEfetuarPagamento.carregarDados(pagamento.getTurma(), pagamento.getBeneficios(), pagamento);
        dlgEfetuarPagamento.setVisible(true);
    }

    public void verificarNivel(int nivelUsuario) {
        this.nivelUsuario = nivelUsuario;
    }
}
